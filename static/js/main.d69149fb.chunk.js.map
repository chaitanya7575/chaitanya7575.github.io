{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","document","body","style","backgroundColor","_useState","useState","_useState2","_slicedToArray","text","setText","_useState3","_useState4","output","setOutput","React","createElement","className","href","id","rows","placeholder","onChange","e","target","value","type","class","onClick","newOutput","crypto","MD5","toString","SHA1","SHA256","disabled","getElementById","select","navigator","clipboard","writeText","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"8QA6FeA,MA1Ff,WACEC,SAASC,KAAKC,MAAMC,gBAAkB,kBAAkB,IAAAC,EAChCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAAAI,EACQL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAwBxB,OACEG,IAAAC,cAAA,WACED,IAAAC,cAAA,OAAKC,UAAU,+BACbF,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAC/BH,IAAAC,cAAA,cAAQ,gBAOdD,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,UAAI,2CACJD,IAAAC,cAAA,YACEC,UAAU,eACVE,GAAG,8BACHC,KAAK,IACLC,YAAY,+BACZC,SA3Ca,SAACC,GACtBb,EAAQa,EAAEC,OAAOC,QA2CTA,MAAOhB,MAKbM,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,UAAI,gDACJD,IAAAC,cAAA,UAAQU,KAAK,SAASC,MAAM,uBAAuBC,QA/CvC,WAChB,IAAIC,EAAYC,IAAOC,IAAItB,GAAMuB,WACjClB,EAAUe,KA6CiE,OAIvEd,IAAAC,cAAA,UAAQU,KAAK,SAASC,MAAM,uBAAuBC,QA9CtC,WACjB,IAAIC,EAAYC,IAAOG,KAAKxB,GAAMuB,WAClClB,EAAUe,KA4CkE,QAIxEd,IAAAC,cAAA,UACEU,KAAK,SACLC,MAAM,uBACNC,QAhDa,WACnB,IAAIC,EAAYC,IAAOI,OAAOzB,GAAMuB,WACpClB,EAAUe,KA+CL,WAKHd,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAAA,YACEC,UAAU,eACVE,GAAG,8BACHC,KAAK,IACLC,YAAY,qCACZI,MAAOZ,EACPsB,UAAQ,IAEVpB,IAAAC,cAAA,UAAQC,UAAU,4BAA4BW,QA5DjC,WACjB,IAAIf,EAASZ,SAASmC,eAAe,+BACrCvB,EAAOwB,SACPC,UAAUC,UAAUC,UAAU3B,EAAOY,SAyDkC,gBCzE5DgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAArB,EAAA,GAAAsB,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWrD,SAASmC,eAAe,SACpDmB,OACHxC,IAAAC,cAACD,IAAMyC,WAAU,KACfzC,IAAAC,cAAChB,EAAG,QAORyC","file":"static/js/main.d69149fb.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport crypto from \"crypto-js\";\nfunction App() {\n  document.body.style.backgroundColor = \"rgb(74 214 150)\";\n  const [text, setText] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const handelOnChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const handelMD5 = () => {\n    let newOutput = crypto.MD5(text).toString();\n    setOutput(newOutput);\n  };\n\n  const handelSha1 = () => {\n    let newOutput = crypto.SHA1(text).toString();\n    setOutput(newOutput);\n  };\n\n  const handelSha256 = () => {\n    let newOutput = crypto.SHA256(text).toString();\n    setOutput(newOutput);\n  };\n  const handleCopy = () => {\n    var output = document.getElementById(\"exampleFormControlTextarea2\");\n    output.select();\n    navigator.clipboard.writeText(output.value);\n  };\n  return (\n    <div>\n      <nav className=\"navbar navbar-dark bg-dark \">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"/\">\n            <strong>HashMaker</strong>\n          </a>\n        </div>\n      </nav>\n\n      {/* ------------------------------------------------------------- */}\n\n      <div className=\"container my-3\">\n        <div className=\"mb-3\">\n          <h2>Enter a string to generate hash value: </h2>\n          <textarea\n            className=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"5\"\n            placeholder=\"your data string goes here: \"\n            onChange={handelOnChange}\n            value={text}\n          ></textarea>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <h3>Click on the button to generate hash value: </h3>\n        <button type=\"button\" class=\"btn btn-primary mx-3\" onClick={handelMD5}>\n          MD5\n        </button>\n\n        <button type=\"button\" class=\"btn btn-primary mx-3\" onClick={handelSha1}>\n          SHA1\n        </button>\n\n        <button\n          type=\"button\"\n          class=\"btn btn-primary mx-3\"\n          onClick={handelSha256}\n        >\n          SHA256\n        </button>\n      </div>\n\n      <div className=\"container my-4\">\n        <h4>output: </h4>\n        <textarea\n          className=\"form-control\"\n          id=\"exampleFormControlTextarea2\"\n          rows=\"2\"\n          placeholder=\"your hash value will appear here: \"\n          value={output}\n          disabled\n        ></textarea>\n        <button className=\"btn btn-primary my-3 mx-2\" onClick={handleCopy}>\n          Copy Text\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}